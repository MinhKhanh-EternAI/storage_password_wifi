name: build-unsigned-ipa-tuist

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Xcode / macOS
        run: |
          xcodebuild -version
          sw_vers

      - name: Install Tuist
        run: |
          brew update
          brew tap tuist/tuist
          brew install --formula tuist
          tuist version

      # 1) Chuẩn hoá & kiểm tra Info.plist (tránh lỗi do BOM/CRLF khi sửa trên Windows)
      - name: Normalize & validate Info.plist
        shell: bash
        run: |
          set -euo pipefail
          if [[ ! -f Info.plist ]]; then
            echo "❌ Missing Info.plist at repo root"; exit 1
          fi

          # Strip UTF-8 BOM + chuyển CRLF -> LF
          python3 - <<'PY'
from pathlib import Path
p = Path('Info.plist')
raw = p.read_bytes()
if raw.startswith(b'\xef\xbb\xbf'):
    raw = raw[3:]
raw = raw.replace(b'\r\n', b'\n').replace(b'\r', b'\n')
p.write_bytes(raw)
PY

          # Convert & lint
          plutil -convert xml1 Info.plist
          plutil -lint Info.plist

      # 2) Generate project bằng Tuist
      - name: Generate Xcode project (Tuist)
        run: tuist generate --no-open

      - name: Debug list after generate
        run: |
          set -euo pipefail
          pwd
          ls -lah
          find . -maxdepth 2 -type d -name "*.xcworkspace" -print
          find . -maxdepth 2 -type d -name "*.xcodeproj" -print

      # 3) Build iphoneos (unsigned) — tự phát hiện workspace/project
      - name: Build unsigned .app (iphoneos)
        shell: bash
        run: |
          set -euo pipefail
          DERIVED="build"
          SCHEME="WiFiOffline"

          shopt -s nullglob
          workspaces=( ./*.xcworkspace )
          projects=( ./*.xcodeproj )

          if (( ${#workspaces[@]} > 0 )); then
            echo "Found workspace: ${workspaces[0]}"
            xcodebuild -workspace "${workspaces[0]}" \
              -scheme "$SCHEME" \
              -configuration Release \
              -sdk iphoneos \
              -destination 'generic/platform=iOS' \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY="" \
              -derivedDataPath "$DERIVED" \
              clean build
          elif (( ${#projects[@]} > 0 )); then
            echo "Found project: ${projects[0]}"
            xcodebuild -project "${projects[0]}" \
              -scheme "$SCHEME" \
              -configuration Release \
              -sdk iphoneos \
              -destination 'generic/platform=iOS' \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY="" \
              -derivedDataPath "$DERIVED" \
              clean build
          else
            echo "❌ No .xcworkspace or .xcodeproj found"; exit 1
          fi

      # 4) Đóng gói IPA chuẩn bằng ditto + verify Info.plist trong .app
      - name: Package unsigned IPA (proper)
        shell: bash
        run: |
          set -euo pipefail
          SCHEME="WiFiOffline"
          CONFIG="Release"

          # Lấy APP_PATH chính xác từ build settings
          APP_PATH=$(xcodebuild -showBuildSettings \
            -scheme "$SCHEME" -configuration "$CONFIG" -sdk iphoneos 2>/dev/null \
            | awk -F' = ' '
                /TARGET_BUILD_DIR/ { t=$2 }
                /WRAPPER_NAME/     { w=$2 }
                END { if (t && w) print t "/" w }' )

          [[ -z "${APP_PATH:-}" || ! -d "$APP_PATH" ]] && { echo "❌ .app not found"; exit 1; }
          APP_NAME=$(basename "$APP_PATH" .app)
          echo "✅ APP_PATH = $APP_PATH"

          rm -rf Payload *.ipa
          mkdir -p Payload
          cp -R "$APP_PATH" "Payload/$APP_NAME.app"

          # Đọc Info.plist trong .app — bắt buộc hiện ra các key này
          PLIST="Payload/$APP_NAME.app/Info.plist"
          echo "== Info.plist in .app =="
          /usr/libexec/PlistBuddy -c 'Print :CFBundleIdentifier' "$PLIST"
          /usr/libexec/PlistBuddy -c 'Print :CFBundleExecutable' "$PLIST"
          /usr/libexec/PlistBuddy -c 'Print :CFBundleShortVersionString' "$PLIST" || true
          /usr/libexec/PlistBuddy -c 'Print :CFBundleVersion' "$PLIST" || true

          # Đóng gói IPA chính thống
          IPA_NAME="${APP_NAME}-unsigned.ipa"
          ditto -ck --sequesterRsrc --keepParent Payload "$IPA_NAME"

          echo "== IPA content preview =="
          unzip -l "$IPA_NAME" | head -n 60
          ls -lah "$IPA_NAME"

      - name: Upload artifact (unsigned IPA)
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-ipa
          path: "*.ipa"
          if-no-files-found: error
