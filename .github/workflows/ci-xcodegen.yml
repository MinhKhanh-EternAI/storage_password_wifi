name: ci-xcodegen-unsigned-ipa

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-iphoneos:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Xcode / macOS
        run: |
          xcodebuild -version
          sw_vers

      - name: Install XcodeGen
        run: |
          brew update
          brew install xcodegen
          xcodegen --version

      - name: Generate Xcode project from project.yml
        run: xcodegen

      - name: Detect scheme
        id: scheme
        shell: bash
        run: |
          set -euo pipefail
          SCHEME=$(xcodebuild -list -json | /usr/bin/python3 - << 'PY'
import sys, json
d=json.load(sys.stdin); p=d.get("project") or {}; s=p.get("schemes") or []
print(s[0] if s else "")
PY
)
          [ -z "$SCHEME" ] && echo "No scheme found" && exit 1
          echo "scheme=$SCHEME" >> "$GITHUB_OUTPUT"
          echo "✅ Scheme: $SCHEME"

      - name: Build unsigned .app (iphoneos)
        shell: bash
        run: |
          set -euo pipefail
          DERIVED="build"
          SCHEME="${{ steps.scheme.outputs.scheme }}"

          # Ưu tiên workspace nếu có, không thì dùng project
          shopt -s nullglob
          workspaces=( ./*.xcworkspace )
          projects=( ./*.xcodeproj )

          if (( ${#workspaces[@]} > 0 )); then
            xcodebuild -workspace "${workspaces[0]}" \
              -scheme "$SCHEME" \
              -configuration Release \
              -sdk iphoneos \
              -destination 'generic/platform=iOS' \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY="" \
              -derivedDataPath "$DERIVED" \
              clean build
          else
            xcodebuild -project "${projects[0]}" \
              -scheme "$SCHEME" \
              -configuration Release \
              -sdk iphoneos \
              -destination 'generic/platform=iOS' \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY="" \
              -derivedDataPath "$DERIVED" \
              clean build
          fi

      - name: Package unsigned IPA (proper)
        shell: bash
        run: |
          set -euo pipefail
          SCHEME="${{ steps.scheme.outputs.scheme }}"
          CONFIG="Release"

          # Lấy đường dẫn .app từ build settings
          APP_PATH=$(xcodebuild -showBuildSettings \
            -scheme "$SCHEME" -configuration "$CONFIG" -sdk iphoneos 2>/dev/null \
            | awk -F' = ' '
                /TARGET_BUILD_DIR/ { t=$2 }
                /WRAPPER_NAME/     { w=$2 }
                END { if (t && w) print t "/" w }'
          )

          if [[ -z "${APP_PATH:-}" || ! -d "$APP_PATH" ]]; then
            echo "❌ Không tìm thấy .app"; exit 1
          fi

          APP_NAME=$(basename "$APP_PATH" .app)
          echo "✅ APP_PATH = $APP_PATH"

          rm -rf Payload *.ipa
          mkdir -p Payload
          cp -R "$APP_PATH" "Payload/$APP_NAME.app"

          # Kiểm tra Info.plist
          PLIST="Payload/$APP_NAME.app/Info.plist"
          echo "== Info.plist check =="
          /usr/libexec/PlistBuddy -c "Print :CFBundleIdentifier" "$PLIST"
          /usr/libexec/PlistBuddy -c "Print :CFBundleVersion" "$PLIST" || true
          /usr/libexec/PlistBuddy -c "Print :CFBundleShortVersionString" "$PLIST" || true
          /usr/libexec/PlistBuddy -c "Print :CFBundleExecutable" "$PLIST"

          # Đóng gói IPA bằng ditto (chuẩn Apple)
          IPA_NAME="${APP_NAME}-unsigned.ipa"
          ditto -ck --sequesterRsrc --keepParent Payload "$IPA_NAME"

          echo "== Liệt kê nội dung IPA =="
          unzip -l "$IPA_NAME" | head -n 40
          ls -lah "$IPA_NAME"

      - name: Upload artifact (unsigned IPA)
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-ipa
          path: "*.ipa"
          if-no-files-found: error
